#!/usr/bin/env ruby

# Compass integration
require 'compass'
Compass.add_project_configuration 'compass/config.rb'

preprocess do
  # authors may unpublish items by setting meta attribute publish: false
  items.delete_if { |item| item[:publish] == false }

  copy_static
  create_tag_pages
  add_update_item_attributes
end

compile '/assets/css/*/' do
  if item[:extension] == 'sass' || item[:extension] == 'scss'
    filter :sass, Compass.sass_engine_options
  end
end

compile '/assets/images/*/' do
end

compile '/assets/files/*/' do
end

compile '*' do
  # item[:extension] returns 'html.erb' for multi-dotted filename
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  ext_to_ignore = %w(png xml html ico txt js coffee)
  
  if ext == 'erb'
    filter :erb
  elsif ext == 'haml' || ext.nil?
    filter :haml
  elsif ext == 'md' || ext == 'markdown'
    filter :erb
    filter :rdiscount
  elsif ext == 'textile'
    filter :erb
    filter :redcloth
  elsif ext == 'org'
    filter :org
  elsif ext == 'coffee'
    filter :coffeescript
  else
    raise "Filter is not configured for #{item.identifier} in Rules file." unless ext_to_ignore.include? ext
  end

  unless ext_to_ignore.include? ext
    filter :typogruby
    #filter :uv, :line_numbers => false, :theme => 'twilight'
    filter :colorize_syntax, :colorizers => :pygmentize

    # use layouts with .html extension or layout specified in meta
    item[:layout] = "none" unless item[:layout] || File.extname(route_path(item)) == '.html' 

    layout 'default' unless item[:layout] == "none"
  end
end

route '/assets/css/*/' do
  item.identifier.chop + '.css'
end

route '/assets/images/*/' do
  item.identifier.chop + '.' + item[:extension]
end

route '/assets/files/*/' do
  item.identifier.chop + '.' + item[:extension]
end

route '*' do
  route_path(item)
end

layout '*', :haml
